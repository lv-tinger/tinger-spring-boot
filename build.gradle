plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

repositories {
    maven {
        allowInsecureProtocol = true
        url 'http://localhost:10001/repository/maven-tinger/'
    }
    mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

subprojects {
    group = 'tinger'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    targetCompatibility = '17'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        maven {
            allowInsecureProtocol = true
            url 'http://localhost:10001/repository/maven-tinger/'
        }
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-autoconfigure'
        compileOnly 'org.springframework.boot:spring-boot-autoconfigure-processor'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        implementation 'com.alibaba:fastjson:1.2.58'
        implementation 'com.zaxxer:HikariCP'
        implementation 'com.caucho:hessian:4.0.66'
        implementation "io.lettuce:lettuce-core:5.0.5.RELEASE"
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                allowInsecureProtocol = true
                url = getRepositoryUrl()
                credentials {
                    username = "${NEXUS_USERNAME}"
                    password = "${NEXUS_PASSWORD}"
                }
            }
        }
    }
}

def getRepositoryUrl() {
    return isSnapshot() ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
}

def isSnapshot() {
    return version.endsWith("SNAPSHOT")
}
